window.jest_html_reporters_callback__({"numFailedTestSuites":0,"numFailedTests":0,"numPassedTestSuites":9,"numPassedTests":55,"numPendingTestSuites":1,"numPendingTests":1,"numRuntimeErrorTestSuites":0,"numTodoTests":0,"numTotalTestSuites":10,"numTotalTests":56,"startTime":1757421279475,"success":false,"testResults":[{"numFailingTests":0,"numPassingTests":2,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1757421288724,"runtime":5777,"slow":true,"start":1757421282947},"testFilePath":"C:\\Users\\a258041\\Downloads\\BlueBot-main\\tests\\unit\\services\\BudgetRecommendationService.test.ts","failureMessage":null,"testResults":[{"ancestorTitles":["BudgetRecommendationService"],"duration":18,"failureMessages":[],"fullName":"BudgetRecommendationService generates recommendations with spending data","status":"passed","title":"generates recommendations with spending data"},{"ancestorTitles":["BudgetRecommendationService"],"duration":1,"failureMessages":[],"fullName":"BudgetRecommendationService falls back to default mix when no data","status":"passed","title":"falls back to default mix when no data"}]},{"numFailingTests":0,"numPassingTests":2,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1757421288757,"runtime":5821,"slow":true,"start":1757421282936},"testFilePath":"C:\\Users\\a258041\\Downloads\\BlueBot-main\\tests\\unit\\services\\WellbeingScoreService.test.ts","failureMessage":null,"testResults":[{"ancestorTitles":["WellbeingScoreService"],"duration":29,"failureMessages":[],"fullName":"WellbeingScoreService computes a score within 0-100","status":"passed","title":"computes a score within 0-100"},{"ancestorTitles":["WellbeingScoreService"],"duration":1,"failureMessages":[],"fullName":"WellbeingScoreService handles empty data gracefully","status":"passed","title":"handles empty data gracefully"}]},{"numFailingTests":0,"numPassingTests":0,"numPendingTests":1,"numTodoTests":0,"perfStats":{"end":1757421288821,"runtime":5837,"slow":true,"start":1757421282984},"testFilePath":"C:\\Users\\a258041\\Downloads\\BlueBot-main\\tests\\security\\SecurityTests.test.ts","failureMessage":null,"testResults":[{"ancestorTitles":["Security Tests","Security Tests (placeholder)"],"duration":null,"failureMessages":[],"fullName":"Security Tests Security Tests (placeholder) placeholder - crypto security tests removed","status":"pending","title":"placeholder - crypto security tests removed"}]},{"numFailingTests":0,"numPassingTests":1,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1757421288833,"runtime":5911,"slow":true,"start":1757421282922},"testFilePath":"C:\\Users\\a258041\\Downloads\\BlueBot-main\\tests\\integration\\PaymentFlow.test.ts","failureMessage":null,"testResults":[{"ancestorTitles":["Payment Flow"],"duration":26,"failureMessages":[],"fullName":"Payment Flow placeholder passes","status":"passed","title":"placeholder passes"}]},{"numFailingTests":0,"numPassingTests":6,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1757421288840,"runtime":5915,"slow":true,"start":1757421282925},"testFilePath":"C:\\Users\\a258041\\Downloads\\BlueBot-main\\tests\\unit\\intent.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["NLIntents.parseExpenseIntent"],"duration":17,"failureMessages":[],"fullName":"NLIntents.parseExpenseIntent parses create with amount/category/merchant/date keywords","status":"passed","title":"parses create with amount/category/merchant/date keywords"},{"ancestorTitles":["NLIntents.parseExpenseIntent"],"duration":1,"failureMessages":[],"fullName":"NLIntents.parseExpenseIntent parses read totals last month","status":"passed","title":"parses read totals last month"},{"ancestorTitles":["NLIntents.parseExpenseIntent"],"duration":2,"failureMessages":[],"fullName":"NLIntents.parseExpenseIntent parses update target and amount","status":"passed","title":"parses update target and amount"},{"ancestorTitles":["NLIntents.parseExpenseIntent"],"duration":1,"failureMessages":[],"fullName":"NLIntents.parseExpenseIntent parses delete last coffee","status":"passed","title":"parses delete last coffee"},{"ancestorTitles":["IntentExecution.selectExpenseTargets"],"duration":1,"failureMessages":[],"fullName":"IntentExecution.selectExpenseTargets filters by merchant and picks closest amount","status":"passed","title":"filters by merchant and picks closest amount"},{"ancestorTitles":["IntentExecution.selectExpenseTargets"],"duration":2,"failureMessages":[],"fullName":"IntentExecution.selectExpenseTargets filters by category and date range","status":"passed","title":"filters by category and date range"}]},{"numFailingTests":0,"numPassingTests":3,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1757421288923,"runtime":5981,"slow":true,"start":1757421282942},"testFilePath":"C:\\Users\\a258041\\Downloads\\BlueBot-main\\tests\\unit\\goalsContext.test.ts","failureMessage":null,"testResults":[{"ancestorTitles":["GoalsContext logic"],"duration":14,"failureMessages":[],"fullName":"GoalsContext logic adds a goal and retrieves it","status":"passed","title":"adds a goal and retrieves it"},{"ancestorTitles":["GoalsContext logic"],"duration":2,"failureMessages":[],"fullName":"GoalsContext logic completing a goal awards points via gamification callbacks","status":"passed","title":"completing a goal awards points via gamification callbacks"},{"ancestorTitles":["GoalsContext logic"],"duration":4,"failureMessages":[],"fullName":"GoalsContext logic updateGoalDetails clamps current when target reduced","status":"passed","title":"updateGoalDetails clamps current when target reduced"}]},{"numFailingTests":0,"numPassingTests":2,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1757421289015,"runtime":6050,"slow":true,"start":1757421282965},"testFilePath":"C:\\Users\\a258041\\Downloads\\BlueBot-main\\tests\\unit\\services\\FinancialNarrativeService.test.ts","failureMessage":null,"testResults":[{"ancestorTitles":["FinancialNarrativeService"],"duration":10,"failureMessages":[],"fullName":"FinancialNarrativeService generates narrative with wellbeing only","status":"passed","title":"generates narrative with wellbeing only"},{"ancestorTitles":["FinancialNarrativeService"],"duration":1,"failureMessages":[],"fullName":"FinancialNarrativeService handles missing wellbeing gracefully","status":"passed","title":"handles missing wellbeing gracefully"}]},{"numFailingTests":0,"numPassingTests":14,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1757421289036,"runtime":6089,"slow":true,"start":1757421282947},"testFilePath":"C:\\Users\\a258041\\Downloads\\BlueBot-main\\tests\\integration\\EndToEndTests.test.ts","failureMessage":null,"testResults":[{"ancestorTitles":["BlueBot End-to-End Integration Tests","AI Service Integration"],"duration":100,"failureMessages":[],"fullName":"BlueBot End-to-End Integration Tests AI Service Integration should handle AI chat with financial context","status":"passed","title":"should handle AI chat with financial context"},{"ancestorTitles":["BlueBot End-to-End Integration Tests","AI Service Integration"],"duration":44,"failureMessages":[],"fullName":"BlueBot End-to-End Integration Tests AI Service Integration should handle AI service fallbacks","status":"passed","title":"should handle AI service fallbacks"},{"ancestorTitles":["BlueBot End-to-End Integration Tests","Error Handling and Resilience"],"duration":3,"failureMessages":[],"fullName":"BlueBot End-to-End Integration Tests Error Handling and Resilience should handle network failures gracefully","status":"passed","title":"should handle network failures gracefully"},{"ancestorTitles":["BlueBot End-to-End Integration Tests","Error Handling and Resilience"],"duration":1,"failureMessages":[],"fullName":"BlueBot End-to-End Integration Tests Error Handling and Resilience should validate input parameters","status":"passed","title":"should validate input parameters"},{"ancestorTitles":["BlueBot End-to-End Integration Tests","Security and Validation"],"duration":0,"failureMessages":[],"fullName":"BlueBot End-to-End Integration Tests Security and Validation should properly validate phone numbers","status":"passed","title":"should properly validate phone numbers"},{"ancestorTitles":["BlueBot End-to-End Integration Tests","Security and Validation"],"duration":1,"failureMessages":[],"fullName":"BlueBot End-to-End Integration Tests Security and Validation should validate crypto addresses","status":"passed","title":"should validate crypto addresses"},{"ancestorTitles":["BlueBot End-to-End Integration Tests","Security and Validation"],"duration":4,"failureMessages":[],"fullName":"BlueBot End-to-End Integration Tests Security and Validation should validate payment amounts","status":"passed","title":"should validate payment amounts"},{"ancestorTitles":["BlueBot End-to-End Integration Tests","Security and Validation"],"duration":0,"failureMessages":[],"fullName":"BlueBot End-to-End Integration Tests Security and Validation should handle data encryption requirements","status":"passed","title":"should handle data encryption requirements"},{"ancestorTitles":["BlueBot End-to-End Integration Tests","Performance and Scalability"],"duration":8,"failureMessages":[],"fullName":"BlueBot End-to-End Integration Tests Performance and Scalability should handle multiple concurrent requests","status":"passed","title":"should handle multiple concurrent requests"},{"ancestorTitles":["BlueBot End-to-End Integration Tests","Performance and Scalability"],"duration":2,"failureMessages":[],"fullName":"BlueBot End-to-End Integration Tests Performance and Scalability should handle large data processing efficiently","status":"passed","title":"should handle large data processing efficiently"},{"ancestorTitles":["BlueBot End-to-End Integration Tests","Configuration and Environment"],"duration":0,"failureMessages":[],"fullName":"BlueBot End-to-End Integration Tests Configuration and Environment should validate required environment variables","status":"passed","title":"should validate required environment variables"},{"ancestorTitles":["BlueBot End-to-End Integration Tests","Configuration and Environment"],"duration":1,"failureMessages":[],"fullName":"BlueBot End-to-End Integration Tests Configuration and Environment should handle missing environment variables gracefully","status":"passed","title":"should handle missing environment variables gracefully"},{"ancestorTitles":["BlueBot End-to-End Integration Tests","Data Validation and Types"],"duration":0,"failureMessages":[],"fullName":"BlueBot End-to-End Integration Tests Data Validation and Types should validate transaction data structures","status":"passed","title":"should validate transaction data structures"},{"ancestorTitles":["BlueBot End-to-End Integration Tests","Data Validation and Types"],"duration":1,"failureMessages":[],"fullName":"BlueBot End-to-End Integration Tests Data Validation and Types should validate user profile data","status":"passed","title":"should validate user profile data"}]},{"numFailingTests":0,"numPassingTests":20,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1757421289100,"runtime":6169,"slow":true,"start":1757421282931},"testFilePath":"C:\\Users\\a258041\\Downloads\\BlueBot-main\\tests\\unit\\services\\MultiAI.test.ts","failureMessage":null,"testResults":[{"ancestorTitles":["Production MultiAI Service","Provider Initialization"],"duration":13,"failureMessages":[],"fullName":"Production MultiAI Service Provider Initialization should initialize all available providers with valid API keys","status":"passed","title":"should initialize all available providers with valid API keys"},{"ancestorTitles":["Production MultiAI Service","Provider Initialization"],"duration":0,"failureMessages":[],"fullName":"Production MultiAI Service Provider Initialization should exclude providers without valid API keys","status":"passed","title":"should exclude providers without valid API keys"},{"ancestorTitles":["Production MultiAI Service","Provider Initialization"],"duration":1,"failureMessages":[],"fullName":"Production MultiAI Service Provider Initialization should prioritize DeepSeek as primary provider","status":"passed","title":"should prioritize DeepSeek as primary provider"},{"ancestorTitles":["Production MultiAI Service","Message Processing"],"duration":98,"failureMessages":[],"fullName":"Production MultiAI Service Message Processing should successfully process message with DeepSeek","status":"passed","title":"should successfully process message with DeepSeek"},{"ancestorTitles":["Production MultiAI Service","Message Processing"],"duration":36,"failureMessages":[],"fullName":"Production MultiAI Service Message Processing should fallback to Gemini when DeepSeek fails","status":"passed","title":"should fallback to Gemini when DeepSeek fails"},{"ancestorTitles":["Production MultiAI Service","Message Processing"],"duration":3,"failureMessages":[],"fullName":"Production MultiAI Service Message Processing should include South African context in responses","status":"passed","title":"should include South African context in responses"},{"ancestorTitles":["Production MultiAI Service","Conversation History"],"duration":4,"failureMessages":[],"fullName":"Production MultiAI Service Conversation History should maintain conversation context","status":"passed","title":"should maintain conversation context"},{"ancestorTitles":["Production MultiAI Service","Error Handling"],"duration":32,"failureMessages":[],"fullName":"Production MultiAI Service Error Handling should handle network errors gracefully","status":"passed","title":"should handle network errors gracefully"},{"ancestorTitles":["Production MultiAI Service","Error Handling"],"duration":37,"failureMessages":[],"fullName":"Production MultiAI Service Error Handling should handle API rate limiting","status":"passed","title":"should handle API rate limiting"},{"ancestorTitles":["Production MultiAI Service","Error Handling"],"duration":2,"failureMessages":[],"fullName":"Production MultiAI Service Error Handling should handle invalid API responses","status":"passed","title":"should handle invalid API responses"},{"ancestorTitles":["Production MultiAI Service","Performance"],"duration":2,"failureMessages":[],"fullName":"Production MultiAI Service Performance should respond within acceptable time limits","status":"passed","title":"should respond within acceptable time limits"},{"ancestorTitles":["Production MultiAI Service","Performance"],"duration":7,"failureMessages":[],"fullName":"Production MultiAI Service Performance should handle concurrent requests","status":"passed","title":"should handle concurrent requests"},{"ancestorTitles":["Production MultiAI Service","Local Llama Integration"],"duration":1,"failureMessages":[],"fullName":"Production MultiAI Service Local Llama Integration should check local Llama availability","status":"passed","title":"should check local Llama availability"},{"ancestorTitles":["Production MultiAI Service","Local Llama Integration"],"duration":6,"failureMessages":[],"fullName":"Production MultiAI Service Local Llama Integration should fallback when local Llama is unavailable","status":"passed","title":"should fallback when local Llama is unavailable"},{"ancestorTitles":["Production MultiAI Service","Mock Provider (Development Only)"],"duration":1,"failureMessages":[],"fullName":"Production MultiAI Service Mock Provider (Development Only) should use mock provider only in development/test environment","status":"passed","title":"should use mock provider only in development/test environment"},{"ancestorTitles":["Production MultiAI Service","Mock Provider (Development Only)"],"duration":0,"failureMessages":[],"fullName":"Production MultiAI Service Mock Provider (Development Only) should exclude mock provider in production","status":"passed","title":"should exclude mock provider in production"},{"ancestorTitles":["Production MultiAI Service","Provider Health Checks"],"duration":0,"failureMessages":[],"fullName":"Production MultiAI Service Provider Health Checks should verify provider connectivity","status":"passed","title":"should verify provider connectivity"},{"ancestorTitles":["Production MultiAI Service","Provider Health Checks"],"duration":7,"failureMessages":[],"fullName":"Production MultiAI Service Provider Health Checks should report unhealthy providers","status":"passed","title":"should report unhealthy providers"},{"ancestorTitles":["Production MultiAI Service","Response Quality"],"duration":2,"failureMessages":[],"fullName":"Production MultiAI Service Response Quality should provide relevant financial advice for South African context","status":"passed","title":"should provide relevant financial advice for South African context"},{"ancestorTitles":["Production MultiAI Service","Response Quality"],"duration":2,"failureMessages":[],"fullName":"Production MultiAI Service Response Quality should provide actionable suggestions","status":"passed","title":"should provide actionable suggestions"}]},{"numFailingTests":0,"numPassingTests":5,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1757421289711,"runtime":6766,"slow":true,"start":1757421282945},"testFilePath":"C:\\Users\\a258041\\Downloads\\BlueBot-main\\tests\\unit\\services\\MultiAI-simple.test.ts","failureMessage":null,"testResults":[{"ancestorTitles":["MultiAI Service"],"duration":9,"failureMessages":[],"fullName":"MultiAI Service should be defined","status":"passed","title":"should be defined"},{"ancestorTitles":["MultiAI Service"],"duration":1,"failureMessages":[],"fullName":"MultiAI Service should have required methods","status":"passed","title":"should have required methods"},{"ancestorTitles":["MultiAI Service"],"duration":0,"failureMessages":[],"fullName":"MultiAI Service should return available providers","status":"passed","title":"should return available providers"},{"ancestorTitles":["MultiAI Service"],"duration":1,"failureMessages":[],"fullName":"MultiAI Service should have a current provider","status":"passed","title":"should have a current provider"},{"ancestorTitles":["MultiAI Service"],"duration":726,"failureMessages":[],"fullName":"MultiAI Service should send messages","status":"passed","title":"should send messages"}]}],"config":{"bail":0,"changedFilesWithAncestor":false,"ci":false,"collectCoverage":false,"collectCoverageFrom":["services/**/*.{ts,tsx}","components/**/*.{ts,tsx}","contexts/**/*.{ts,tsx}","utils/**/*.{ts,tsx}","app/**/*.{ts,tsx}","!**/*.d.ts","!**/node_modules/**","!**/.expo/**","!**/coverage/**","!**/dist/**"],"coverageDirectory":"C:\\Users\\a258041\\Downloads\\BlueBot-main\\coverage","coverageProvider":"babel","coverageReporters":["text","lcov","html","json-summary"],"coverageThreshold":{"global":{"branches":90,"functions":90,"lines":90,"statements":90},"services/MultiAI.ts":{"branches":95,"functions":95,"lines":95,"statements":95}},"detectLeaks":false,"detectOpenHandles":false,"errorOnDeprecated":true,"expand":false,"findRelatedTests":false,"forceExit":false,"json":false,"lastCommit":false,"listTests":false,"logHeapUsage":false,"maxConcurrency":5,"maxWorkers":10,"noStackTrace":false,"nonFlagArgs":[],"notify":false,"notifyMode":"failure-change","onlyChanged":false,"onlyFailures":false,"openHandlesTimeout":1000,"passWithNoTests":false,"projects":[],"reporters":[["default",{}],["C:\\Users\\a258041\\Downloads\\BlueBot-main\\node_modules\\jest-html-reporters\\index.js",{"publicPath":"./test-reports","filename":"test-report.html","expand":true}],["C:\\Users\\a258041\\Downloads\\BlueBot-main\\node_modules\\jest-junit\\index.js",{"outputDirectory":"./test-reports","outputName":"junit.xml"}]],"rootDir":"C:\\Users\\a258041\\Downloads\\BlueBot-main","runTestsByPath":false,"seed":-1205210834,"skipFilter":false,"snapshotFormat":{"escapeString":false,"printBasicPrototype":false},"testFailureExitCode":1,"testPathPattern":"","testSequencer":"C:\\Users\\a258041\\Downloads\\BlueBot-main\\node_modules\\@jest\\test-sequencer\\build\\index.js","testTimeout":30000,"updateSnapshot":"new","useStderr":false,"verbose":true,"watch":false,"watchAll":false,"watchman":true,"workerThreads":false},"endTime":1757421289903,"_reporterOptions":{"publicPath":"./test-reports","filename":"test-report.html","expand":true,"pageTitle":"","hideIcon":false,"testCommand":"","openReport":false,"failureMessageOnly":0,"enableMergeData":false,"dataMergeLevel":1,"inlineSource":false,"urlForTestFiles":"","darkTheme":false,"includeConsoleLog":false,"stripSkippedTest":false},"logInfoMapping":{},"attachInfos":{}})